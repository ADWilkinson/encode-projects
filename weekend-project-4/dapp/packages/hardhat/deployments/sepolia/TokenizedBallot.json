{
  "address": "0xC148bFd552392Dba61621D4B33dcBFF4448Ae8b4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_proposalNames",
          "type": "bytes32[]"
        },
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_targetBlockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getVotingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_votePower",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenContract",
      "outputs": [
        {
          "internalType": "contract IMyToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "winnerName_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winningProposal_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x702e24b754c09ac5c867045e551405a573f3e3a67e123b0455b055ed65905a29",
  "receipt": {
    "to": null,
    "from": "0x30B0D5758c79645Eb925825E1Ee8A2c448812F37",
    "contractAddress": "0xC148bFd552392Dba61621D4B33dcBFF4448Ae8b4",
    "transactionIndex": 34,
    "gasUsed": "457256",
    "logsBloom": "0x
    "blockHash": "0x3d6212607259f709cd238bb6f7d2ac1099eb9d6a798a71b53416c42c9b454ab0",
    "transactionHash": "0x702e24b754c09ac5c867045e551405a573f3e3a67e123b0455b055ed65905a29",
    "logs": [],
    "blockNumber": 6599281,
    "cumulativeGasUsed": "4337100",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x4272617a696c0000000000000000000000000000000000000000000000000000",
      "0x417267656e74696e610000000000000000000000000000000000000000000000",
      "0x4368696c65000000000000000000000000000000000000000000000000000000"
    ],
    "0x0AAFeB206dE1A21f030B4Bad4A598c128bd09a75",
    "6599279"
  ],
  "numDeployments": 1,
  "solcInputHash": "0c796a06a39e6868e8de6d4a2e0f4c5a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proposalNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_targetBlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_votePower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract IMyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenizedBallot.sol\":\"TokenizedBallot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenizedBallot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IMyToken {\\n    function getPastVotes(address, uint256) external view returns (uint256);\\n}\\n\\ncontract TokenizedBallot {\\n    struct Proposal {\\n        bytes32 name;\\n        uint256 voteCount;\\n    }\\n\\n    IMyToken public tokenContract;\\n    Proposal[] public proposals;\\n    uint256 public targetBlockNumber;\\n\\n    mapping(address => uint256) spentVotePower;\\n\\n    constructor(bytes32[] memory _proposalNames, address _tokenContract, uint256 _targetBlockNumber) {\\n        require(_targetBlockNumber < block.number, \\\"Block number must be in the past\\\");\\n        tokenContract = IMyToken(_tokenContract);\\n        targetBlockNumber = _targetBlockNumber;\\n        for (uint256 i = 0; i < _proposalNames.length; i++) {\\n            proposals.push(Proposal({name: _proposalNames[i], voteCount: 0}));\\n        }\\n    }\\n\\n    function vote(uint256 proposal, uint256 amount) external {\\n        uint256 votingPower = getVotingPower(msg.sender);\\n        require(votingPower >= amount, \\\"Not enough voting power\\\");\\n        spentVotePower[msg.sender] += amount;\\n        proposals[proposal].voteCount += amount;\\n    }\\n\\n    function getVotingPower(address voter) public view returns (uint256 _votePower) {\\n        return _votePower = tokenContract.getPastVotes(voter, targetBlockNumber) - spentVotePower[voter];\\n    }\\n\\n    function winningProposal() public view returns (uint256 winningProposal_) {\\n        uint256 winningVoteCount = 0;\\n        for (uint256 p = 0; p < proposals.length; p++) {\\n            if (proposals[p].voteCount > winningVoteCount) {\\n                winningVoteCount = proposals[p].voteCount;\\n                winningProposal_ = p;\\n            }\\n        }\\n    }\\n\\n    function winnerName() external view returns (bytes32 winnerName_) {\\n        winnerName_ = proposals[winningProposal()].name;\\n    }\\n}\",\"keccak256\":\"0xecfcc651ec08cc1e3c11c4bf67567e6b81b64fbf0c36a3a988cfae69928699dd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161070338038061070383398101604081905261002f91610151565b4381106100825760405162461bcd60e51b815260206004820181905260248201527f426c6f636b206e756d626572206d75737420626520696e207468652070617374604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b03841617815560028290555b835181101561011657600160405180604001604052808684815181106100cb576100cb610229565b6020908102919091018101518252600091810182905283546001818101865594835291819020835160029093020191825591909101519101558061010e8161023f565b9150506100a3565b50505050610266565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461014c57600080fd5b919050565b60008060006060848603121561016657600080fd5b83516001600160401b038082111561017d57600080fd5b818601915086601f83011261019157600080fd5b81516020828211156101a5576101a561011f565b8160051b604051601f19603f830116810181811086821117156101ca576101ca61011f565b60405292835281830193508481018201928a8411156101e857600080fd5b948201945b83861015610206578551855294820194938201936101ed565b97506102159050888201610135565b955050505050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b60006001820161025f57634e487b7160e01b600052601160045260246000fd5b5060010190565b61048e806102756000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063609ff1bd1161005b578063609ff1bd146100f1578063b384abef146100f9578063bb4d44361461010e578063e2ba53f01461012157600080fd5b8063013cf08b146100825780632a8cd29e146100af57806355a373d6146100c6575b600080fd5b610095610090366004610369565b610129565b604080519283526020830191909152015b60405180910390f35b6100b860025481565b6040519081526020016100a6565b6000546100d9906001600160a01b031681565b6040516001600160a01b0390911681526020016100a6565b6100b8610157565b61010c610107366004610382565b6101d4565b005b6100b861011c3660046103a4565b610299565b6100b8610336565b6001818154811061013957600080fd5b60009182526020909120600290910201805460019091015490915082565b600080805b6001548110156101cf57816001828154811061017a5761017a6103d4565b90600052602060002090600202016001015411156101bd57600181815481106101a5576101a56103d4565b90600052602060002090600202016001015491508092505b806101c781610400565b91505061015c565b505090565b60006101df33610299565b9050818110156102355760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820766f74696e6720706f776572000000000000000000604482015260640160405180910390fd5b3360009081526003602052604081208054849290610254908490610419565b92505081905550816001848154811061026f5761026f6103d4565b9060005260206000209060020201600101600082825461028f9190610419565b9091555050505050565b6001600160a01b038181166000818152600360205260408082205482546002549251630748d63560e31b81526004810195909552602485019290925291939192911690633a46b1a890604401602060405180830381865afa158015610302573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610326919061042c565b6103309190610445565b92915050565b60006001610342610157565b81548110610352576103526103d4565b906000526020600020906002020160000154905090565b60006020828403121561037b57600080fd5b5035919050565b6000806040838503121561039557600080fd5b50508035926020909101359150565b6000602082840312156103b657600080fd5b81356001600160a01b03811681146103cd57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610412576104126103ea565b5060010190565b80820180821115610330576103306103ea565b60006020828403121561043e57600080fd5b5051919050565b81810381811115610330576103306103ea56fea26469706673582212204e71cbdb49606661b6867f4295204b82736a3de02090b8eb21dbd9d0574c620564736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063609ff1bd1161005b578063609ff1bd146100f1578063b384abef146100f9578063bb4d44361461010e578063e2ba53f01461012157600080fd5b8063013cf08b146100825780632a8cd29e146100af57806355a373d6146100c6575b600080fd5b610095610090366004610369565b610129565b604080519283526020830191909152015b60405180910390f35b6100b860025481565b6040519081526020016100a6565b6000546100d9906001600160a01b031681565b6040516001600160a01b0390911681526020016100a6565b6100b8610157565b61010c610107366004610382565b6101d4565b005b6100b861011c3660046103a4565b610299565b6100b8610336565b6001818154811061013957600080fd5b60009182526020909120600290910201805460019091015490915082565b600080805b6001548110156101cf57816001828154811061017a5761017a6103d4565b90600052602060002090600202016001015411156101bd57600181815481106101a5576101a56103d4565b90600052602060002090600202016001015491508092505b806101c781610400565b91505061015c565b505090565b60006101df33610299565b9050818110156102355760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820766f74696e6720706f776572000000000000000000604482015260640160405180910390fd5b3360009081526003602052604081208054849290610254908490610419565b92505081905550816001848154811061026f5761026f6103d4565b9060005260206000209060020201600101600082825461028f9190610419565b9091555050505050565b6001600160a01b038181166000818152600360205260408082205482546002549251630748d63560e31b81526004810195909552602485019290925291939192911690633a46b1a890604401602060405180830381865afa158015610302573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610326919061042c565b6103309190610445565b92915050565b60006001610342610157565b81548110610352576103526103d4565b906000526020600020906002020160000154905090565b60006020828403121561037b57600080fd5b5035919050565b6000806040838503121561039557600080fd5b50508035926020909101359150565b6000602082840312156103b657600080fd5b81356001600160a01b03811681146103cd57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610412576104126103ea565b5060010190565b80820180821115610330576103306103ea565b60006020828403121561043e57600080fd5b5051919050565b81810381811115610330576103306103ea56fea26469706673582212204e71cbdb49606661b6867f4295204b82736a3de02090b8eb21dbd9d0574c620564736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8379,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "tokenContract",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IMyToken)8371"
      },
      {
        "astId": 8383,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "proposals",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Proposal)8376_storage)dyn_storage"
      },
      {
        "astId": 8385,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "targetBlockNumber",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 8389,
        "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
        "label": "spentVotePower",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Proposal)8376_storage)dyn_storage": {
        "base": "t_struct(Proposal)8376_storage",
        "encoding": "dynamic_array",
        "label": "struct TokenizedBallot.Proposal[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IMyToken)8371": {
        "encoding": "inplace",
        "label": "contract IMyToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Proposal)8376_storage": {
        "encoding": "inplace",
        "label": "struct TokenizedBallot.Proposal",
        "members": [
          {
            "astId": 8373,
            "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 8375,
            "contract": "contracts/TokenizedBallot.sol:TokenizedBallot",
            "label": "voteCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}